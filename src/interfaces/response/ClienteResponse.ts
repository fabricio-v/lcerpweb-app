import { ICidadeResponse } from "./CidadeResponse";
import { IEstadoResponse } from "./EstadoResponse";
import { IPessoaEnderecoResponse } from "./PessoaEnderecoResponse";

export interface IClienteResponse {
  id: number;
  ativo: true;
  tipoPessoaFisicaJuridica: string;
  nome: string;
  razaoSocial: string;
  apelido: string;
  cpfCnpj: string;
  ieIndicador: number;
  ie: string;
  im: string;
  isuf: string;
  rg: string;
  rgOrgao: string;
  rgDataEmissao: string;
  dataNascimento: string;
  endereco: string;
  numero: string;
  bairro: string;
  referencia: string;
  cep: string;
  cidade: ICidadeResponse;
  estado: IEstadoResponse;
  idPais: number;
  contato1: string;
  contato2: string;
  contato3: string;
  email: string;
  email2: string;
  cidadeNaturalidade: ICidadeResponse;
  estadoNaturalidade: IEstadoResponse;
  enderecoEntrega: string;
  numeroEntrega: string;
  bairroEntrega: string;
  referenciaEntrega: string;
  cepEntrega: string;
  cidadeEntrega: ICidadeResponse;
  estadoEntrega: IEstadoResponse;
  filiacaoPai: string;
  filiacaoPaiContato: string;
  filiacaoMae: string;
  filiacaoMaeContato: string;
  filiacaoEndereco: string;
  filiacaoNumero: string;
  filiacaoBairro: string;
  filiacaoReferencia: string;
  filiacaoCep: string;
  cidadeFiliacao: ICidadeResponse;
  estadoFiliacao: IEstadoResponse;
  conjugeNome: string;
  conjugeCpf: string;
  conjugeRg: string;
  conjugeDataNascimento: string;
  conjugeContato: string;
  conjugeEndereco: string;
  conjugeNumero: string;
  conjugeBairro: string;
  conjugeCep: string;
  cidadeConjuge: ICidadeResponse;
  estadoConjuge: IEstadoResponse;
  conjugeEmpresa: string;
  conjugeEmpresaCargo: string;
  conjugeEmpresaRenda: number;
  conjugeEmpresaAdmissao: string;
  empresaNome: string;
  empresaContato: string;
  empresaEndereco: string;
  empresaNumero: string;
  empresaBairro: string;
  empresaCep: string;
  cidadeEmpresa: ICidadeResponse;
  estadoEmpresa: IEstadoResponse;
  empresaCargo: string;
  empresaRenda: number;
  empresaAdmissao: string;
  avalistaNome: string;
  avalistaCpf: string;
  avalistaRg: string;
  avalistaDataNascimento: string;
  avalistaContato: string;
  avalistaEndereco: string;
  avalistaNumero: string;
  avalistaBairro: string;
  avalistaCep: string;
  cidadeAvalista: ICidadeResponse;
  estadoAvalista: IEstadoResponse;
  avalistaEmpresa: string;
  avalistaEmpresaCargo: string;
  avalistaEmpresaRenda: number;
  avalistaEmpresaAdmissao: string;
  tipoPessoa: string;
  sexo: string;
  estadoCivil: string;
  limiteCredito: number;
  tabelaPreco: {
    id: number;
    nome: string;
  };
  obs: string;
  datahoraCadastro: string;
  enderecosAdicionais: IPessoaEnderecoResponse[];
}
